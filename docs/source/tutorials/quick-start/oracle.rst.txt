Oracle
######

The Oracle can be created like the following.

.. code-block:: python

    from h1st.model.oracle import Oracle
    from sklearn.datasets import load_iris

    class IrisRuleModel():
        sepal_length_max: float = 6.0
        sepal_length_min: float = 4.0
        sepal_width_min: float = 3.0
        sepal_width_max: float = 4.6
        
        def predict(self, data):
            df = data['X']
            return {
                'predictions': pd.Series(map(
                    self.predict_setosa, df['sepal_length'], df['sepal_width']
                ))}

        
        def predict_setosa(self, sepal_length, sepal_width):
            return 0 if (self.sepal_length_min <= sepal_length <= self.sepal_length_max) \
                    & (self.sepal_width_min <= sepal_width <= self.sepal_width_max) \
                else 1        

    # Load data
    df_X, y = load_iris(as_frame=True, return_X_y=True)
    df_X.columns = ['sepal_length','sepal_width','petal_length','petal_width']

    # Build oracle
    oracle = Oracle(teacher=IrisRuleModel())
    oracle.build(
        data={'X': df_X},
        features=['sepal_length','sepal_width']
    )
    oracle.persist('iris_oracle_v1')


And you can use persisted Oracle for inference like the following.

.. code-block:: python
    
    my_oracle = Oracle(teacher=IrisRuleModel()).load('iris_oracle_v1')
    my_oracle.predict({'X': df_X[['sepal_length','sepal_width']]})
