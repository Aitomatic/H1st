from transformers.pipelines import pipeline

from ...util import fullqualname
from ..models import (
    PreTrainedHuggingFaceImageClassifier,
    PreTrainedHuggingFaceObjectDetector,
    PreTrainedHuggingFaceTextClassifier,
    PreTrainedHuggingFaceTextGenerator,
    PreTrainedHuggingFaceText2TextGenerator,
    PreTrainedHuggingFaceTextSummarizer,
    PreTrainedHuggingFaceTokenClassifier,
    PreTrainedHuggingFaceTranslator,
)


def run():
    print(
        PreTrainedHuggingFaceImageClassifier.objects.update_or_create(
            name='PreTrained-HuggingFace-Image-Classifier',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='image-classification',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    print(
        PreTrainedHuggingFaceObjectDetector.objects.update_or_create(
            name='PreTrained-HuggingFace-Object-Detector',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='object-detection',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    print(
        PreTrainedHuggingFaceTextClassifier.objects.update_or_create(
            name='PreTrained-HuggingFace-Text-Classifier',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='text-classification',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])
    print(
        PreTrainedHuggingFaceTextClassifier.objects.update_or_create(
            name='PreTrained-HuggingFace-Sentiment-Analyzer',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='sentiment-analysis',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    print(
        PreTrainedHuggingFaceTextGenerator.objects.update_or_create(
            name='PreTrained-HuggingFace-Text-Generator',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='text-generation',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    print(
        PreTrainedHuggingFaceText2TextGenerator.objects.update_or_create(
            name='PreTrained-HuggingFace-Text2Text-Generator',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='text2text-generation',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    print(
        PreTrainedHuggingFaceTextSummarizer.objects.update_or_create(
            name='PreTrained-HuggingFace-Text-Summarizer',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='summarization',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    print(
        PreTrainedHuggingFaceTokenClassifier.objects.update_or_create(
            name='PreTrained-HuggingFace-Token-Classifier',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='token-classification',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])
    print(
        PreTrainedHuggingFaceTokenClassifier.objects.update_or_create(
            name='PreTrained-HuggingFace-Named-Entity-Recognizer',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='ner',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    print(
        PreTrainedHuggingFaceTranslator.objects.update_or_create(
            name='PreTrained-HuggingFace-Translator',
            defaults=dict(
                py_loader_module_and_qualname=fullqualname(pipeline),
                artifact_global_url=None,
                artifact_local_path=None,
                params=dict(__init__=dict(task='translation',
                                          model=None,
                                          config=None,
                                          tokenizer=None,
                                          feature_extractor=None,
                                          framework=None,
                                          revision=None,
                                          use_fast=True,
                                          use_auth_token=None,
                                          model_kwargs={}))))[0])

    for translation_model_name in ('facebook/m2m100_418M',
                                   'facebook/m2m100_1.2B',
                                   'facebook/mbart-large-50-one-to-many-mmt',
                                   'facebook/mbart-large-50-many-to-many-mmt'):
        print(
            PreTrainedHuggingFaceTranslator.objects.update_or_create(
                name=('PreTrained-HuggingFace-Translator-' +
                      translation_model_name.replace('/', '-')),
                defaults=dict(
                    py_loader_module_and_qualname=fullqualname(pipeline),
                    artifact_global_url=None,
                    artifact_local_path=None,
                    params=dict(__init__=dict(task='translation',
                                              model=translation_model_name,
                                              config=None,
                                              tokenizer=None,
                                              feature_extractor=None,
                                              framework=None,
                                              revision=None,
                                              use_fast=True,
                                              use_auth_token=None,
                                              model_kwargs={}))))[0])
